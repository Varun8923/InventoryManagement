#pragma checksum "D:\Varcas\Inventory\Inventory\Views\UIInterface\iconflag.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6f1481eeff3f948f9188cd97c46cab9e295d88f3"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_UIInterface_iconflag), @"mvc.1.0.view", @"/Views/UIInterface/iconflag.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Varcas\Inventory\Inventory\Views\_ViewImports.cshtml"
using Inventory;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Varcas\Inventory\Inventory\Views\_ViewImports.cshtml"
using Inventory.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6f1481eeff3f948f9188cd97c46cab9e295d88f3", @"/Views/UIInterface/iconflag.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ddd647dc521e354fabd3c5f5959fac0949cf3697", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_UIInterface_iconflag : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Index", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Home", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/jquery-3.6.0.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/feather.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/jquery.slimscroll.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/bootstrap.bundle.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/apexchart/apexcharts.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/apexchart/chart-data.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/script.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n\r\n  \r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6f1481eeff3f948f9188cd97c46cab9e295d88f36548", async() => {
                WriteLiteral(@"
        
            
        </div>
        <!-- Main Wrapper -->
        <div class=""main-wrapper"">

           
            <div class=""page-wrapper cardhead"">
                <div class=""content container-fluid"">
				
					<!-- Page Header -->
					<div class=""page-header"">
						<div class=""row"">
							<div class=""col-sm-12"">
								<h3 class=""page-title"">Flag Icon</h3>
								<ul class=""breadcrumb"">
									<li class=""breadcrumb-item"">");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6f1481eeff3f948f9188cd97c46cab9e295d88f37288", async() => {
                    WriteLiteral("Dashboard");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"</li>
									<li class=""breadcrumb-item active"">Flag Icon</li>
								</ul>
							</div>
						</div>
					</div>	
					<!-- /Page Header -->					
					
					<div class=""row"">
					
						<!-- Chart -->
						<div class=""col-md-12"">	
							<div class=""card"">
								<div class=""card-header"">
									<div class=""card-title"">Flag Icons</div>
								</div>
								<div class=""card-body"">
									<div class=""icons-items"">
										<ul class=""icons-list"">
											<li><i class=""flag flag-ad"" data-bs-toggle=""tooltip"" title=""flag flag-ad""></i></li>
											<li><i class=""flag flag-ae"" data-bs-toggle=""tooltip"" title=""flag flag-ae""></i></li>
											<li><i class=""flag flag-af"" data-bs-toggle=""tooltip"" title=""flag flag-af""></i></li>
											<li><i class=""flag flag-ag"" data-bs-toggle=""tooltip"" title=""flag flag-ag""></i></li>
											<li><i class=""flag flag-ai"" data-bs-toggle=""tooltip"" title=""flag flag-ai""></i></li>
											<li><i class=""flag flag-al"" data-bs-toggle=""toolti");
                WriteLiteral(@"p"" title=""flag flag-al""></i></li>
											<li><i class=""flag flag-am"" data-bs-toggle=""tooltip"" title=""flag flag-am""></i></li>
											<li><i class=""flag flag-ao"" data-bs-toggle=""tooltip"" title=""flag flag-ao""></i></li>
											<li><i class=""flag flag-ar"" data-bs-toggle=""tooltip"" title=""flag flag-ar""></i></li>
											<li><i class=""flag flag-as"" data-bs-toggle=""tooltip"" title=""flag flag-as""></i></li>
											<li><i class=""flag flag-at"" data-bs-toggle=""tooltip"" title=""flag flag-at""></i></li>
											<li><i class=""flag flag-au"" data-bs-toggle=""tooltip"" title=""flag flag-au""></i></li>
											<li><i class=""flag flag-aw"" data-bs-toggle=""tooltip"" title=""flag flag-aw""></i></li>
											<li><i class=""flag flag-ax"" data-bs-toggle=""tooltip"" title=""flag flag-ax""></i></li>
											<li><i class=""flag flag-az"" data-bs-toggle=""tooltip"" title=""flag flag-az""></i></li>
											<li><i class=""flag flag-ba"" data-bs-toggle=""tooltip"" title=""flag flag-ba""></i></li>
											<li><i class=""flag");
                WriteLiteral(@" flag-bb"" data-bs-toggle=""tooltip"" title=""flag flag-bb""></i></li>
											<li><i class=""flag flag-bd"" data-bs-toggle=""tooltip"" title=""flag flag-bd""></i></li>
											<li><i class=""flag flag-be"" data-bs-toggle=""tooltip"" title=""flag flag-be""></i></li>
											<li><i class=""flag flag-bf"" data-bs-toggle=""tooltip"" title=""flag flag-bf""></i></li>
											<li><i class=""flag flag-bg"" data-bs-toggle=""tooltip"" title=""flag flag-bg""></i></li>
											<li><i class=""flag flag-bh"" data-bs-toggle=""tooltip"" title=""flag flag-bh""></i></li>
											<li><i class=""flag flag-bi"" data-bs-toggle=""tooltip"" title=""flag flag-bi""></i></li>
											<li><i class=""flag flag-bj"" data-bs-toggle=""tooltip"" title=""flag flag-bj""></i></li>
											<li><i class=""flag flag-bl"" data-bs-toggle=""tooltip"" title=""flag flag-bl""></i></li>
											<li><i class=""flag flag-bm"" data-bs-toggle=""tooltip"" title=""flag flag-bm""></i></li>
											<li><i class=""flag flag-bn"" data-bs-toggle=""tooltip"" title=""flag flag-bn""></i></li");
                WriteLiteral(@">
											<li><i class=""flag flag-bo"" data-bs-toggle=""tooltip"" title=""flag flag-bo""></i></li>
											<li><i class=""flag flag-bq"" data-bs-toggle=""tooltip"" title=""flag flag-bq""></i></li>
											<li><i class=""flag flag-br"" data-bs-toggle=""tooltip"" title=""flag flag-br""></i></li>
											<li><i class=""flag flag-bs"" data-bs-toggle=""tooltip"" title=""flag flag-bs""></i></li>
											<li><i class=""flag flag-bt"" data-bs-toggle=""tooltip"" title=""flag flag-bt""></i></li>
											<li><i class=""flag flag-bv"" data-bs-toggle=""tooltip"" title=""flag flag-bv""></i></li>
											<li><i class=""flag flag-bw"" data-bs-toggle=""tooltip"" title=""flag flag-bw""></i></li>
											<li><i class=""flag flag-by"" data-bs-toggle=""tooltip"" title=""flag flag-by""></i></li>
											<li><i class=""flag flag-bz"" data-bs-toggle=""tooltip"" title=""flag flag-bz""></i></li>
											<li><i class=""flag flag-ca"" data-bs-toggle=""tooltip"" title=""flag flag-ca""></i></li>
											<li><i class=""flag flag-cc"" data-bs-toggle=""toolti");
                WriteLiteral(@"p"" title=""flag flag-cc""></i></li>
											<li><i class=""flag flag-cd"" data-bs-toggle=""tooltip"" title=""flag flag-cd""></i></li>
											<li><i class=""flag flag-cf"" data-bs-toggle=""tooltip"" title=""flag flag-cf""></i></li>
											<li><i class=""flag flag-cg"" data-bs-toggle=""tooltip"" title=""flag flag-cg""></i></li>
											<li><i class=""flag flag-ch"" data-bs-toggle=""tooltip"" title=""flag flag-ch""></i></li>
											<li><i class=""flag flag-ci"" data-bs-toggle=""tooltip"" title=""flag flag-ci""></i></li>
											<li><i class=""flag flag-ck"" data-bs-toggle=""tooltip"" title=""flag flag-ck""></i></li>
											<li><i class=""flag flag-cl"" data-bs-toggle=""tooltip"" title=""flag flag-cl""></i></li>
											<li><i class=""flag flag-cm"" data-bs-toggle=""tooltip"" title=""flag flag-cm""></i></li>
											<li><i class=""flag flag-cn"" data-bs-toggle=""tooltip"" title=""flag flag-cn""></i></li>
											<li><i class=""flag flag-co"" data-bs-toggle=""tooltip"" title=""flag flag-co""></i></li>
											<li><i class=""flag");
                WriteLiteral(@" flag-cr"" data-bs-toggle=""tooltip"" title=""flag flag-cr""></i></li>
											<li><i class=""flag flag-cu"" data-bs-toggle=""tooltip"" title=""flag flag-cu""></i></li>
											<li><i class=""flag flag-cv"" data-bs-toggle=""tooltip"" title=""flag flag-cv""></i></li>
											<li><i class=""flag flag-cw"" data-bs-toggle=""tooltip"" title=""flag flag-cw""></i></li>
											<li><i class=""flag flag-cx"" data-bs-toggle=""tooltip"" title=""flag flag-cx""></i></li>
											<li><i class=""flag flag-cy"" data-bs-toggle=""tooltip"" title=""flag flag-cy""></i></li>
											<li><i class=""flag flag-cz"" data-bs-toggle=""tooltip"" title=""flag flag-cz""></i></li>
											<li><i class=""flag flag-de"" data-bs-toggle=""tooltip"" title=""flag flag-de""></i></li>
											<li><i class=""flag flag-dj"" data-bs-toggle=""tooltip"" title=""flag flag-dj""></i></li>
											<li><i class=""flag flag-dk"" data-bs-toggle=""tooltip"" title=""flag flag-dk""></i></li>
											<li><i class=""flag flag-dm"" data-bs-toggle=""tooltip"" title=""flag flag-dm""></i></li");
                WriteLiteral(@">
											<li><i class=""flag flag-do"" data-bs-toggle=""tooltip"" title=""flag flag-do""></i></li>
											<li><i class=""flag flag-dz"" data-bs-toggle=""tooltip"" title=""flag flag-dz""></i></li>
											<li><i class=""flag flag-ec"" data-bs-toggle=""tooltip"" title=""flag flag-ec""></i></li>
											<li><i class=""flag flag-ee"" data-bs-toggle=""tooltip"" title=""flag flag-ee""></i></li>
											<li><i class=""flag flag-eg"" data-bs-toggle=""tooltip"" title=""flag flag-eg""></i></li>
											<li><i class=""flag flag-er"" data-bs-toggle=""tooltip"" title=""flag flag-er""></i></li>
											<li><i class=""flag flag-es"" data-bs-toggle=""tooltip"" title=""flag flag-es""></i></li>
											<li><i class=""flag flag-et"" data-bs-toggle=""tooltip"" title=""flag flag-et""></i></li>
											<li><i class=""flag flag-fi"" data-bs-toggle=""tooltip"" title=""flag flag-fi""></i></li>
											<li><i class=""flag flag-fj"" data-bs-toggle=""tooltip"" title=""flag flag-fj""></i></li>
											<li><i class=""flag flag-fk"" data-bs-toggle=""toolti");
                WriteLiteral(@"p"" title=""flag flag-fk""></i></li>
											<li><i class=""flag flag-fm"" data-bs-toggle=""tooltip"" title=""flag flag-fm""></i></li>
											<li><i class=""flag flag-fo"" data-bs-toggle=""tooltip"" title=""flag flag-fo""></i></li>
											<li><i class=""flag flag-fr"" data-bs-toggle=""tooltip"" title=""flag flag-fr""></i></li>
											<li><i class=""flag flag-ga"" data-bs-toggle=""tooltip"" title=""flag flag-ga""></i></li>
											<li><i class=""flag flag-gb"" data-bs-toggle=""tooltip"" title=""flag flag-gb""></i></li>
											<li><i class=""flag flag-gd"" data-bs-toggle=""tooltip"" title=""flag flag-gd""></i></li>
											<li><i class=""flag flag-ge"" data-bs-toggle=""tooltip"" title=""flag flag-ge""></i></li>
											<li><i class=""flag flag-gf"" data-bs-toggle=""tooltip"" title=""flag flag-gf""></i></li>
											<li><i class=""flag flag-gg"" data-bs-toggle=""tooltip"" title=""flag flag-gg""></i></li>
											<li><i class=""flag flag-gh"" data-bs-toggle=""tooltip"" title=""flag flag-gh""></i></li>
											<li><i class=""flag");
                WriteLiteral(@" flag-gi"" data-bs-toggle=""tooltip"" title=""flag flag-gi""></i></li>
											<li><i class=""flag flag-gl"" data-bs-toggle=""tooltip"" title=""flag flag-gl""></i></li>
											<li><i class=""flag flag-gm"" data-bs-toggle=""tooltip"" title=""flag flag-gm""></i></li>
											<li><i class=""flag flag-gn"" data-bs-toggle=""tooltip"" title=""flag flag-gn""></i></li>
											<li><i class=""flag flag-gp"" data-bs-toggle=""tooltip"" title=""flag flag-gp""></i></li>
											<li><i class=""flag flag-gq"" data-bs-toggle=""tooltip"" title=""flag flag-gq""></i></li>
											<li><i class=""flag flag-gr"" data-bs-toggle=""tooltip"" title=""flag flag-gr""></i></li>
											<li><i class=""flag flag-gs"" data-bs-toggle=""tooltip"" title=""flag flag-gs""></i></li>
											<li><i class=""flag flag-gt"" data-bs-toggle=""tooltip"" title=""flag flag-gt""></i></li>
											<li><i class=""flag flag-gu"" data-bs-toggle=""tooltip"" title=""flag flag-gu""></i></li>
											<li><i class=""flag flag-gw"" data-bs-toggle=""tooltip"" title=""flag flag-gw""></i></li");
                WriteLiteral(@">
											<li><i class=""flag flag-gy"" data-bs-toggle=""tooltip"" title=""flag flag-gy""></i></li>
											<li><i class=""flag flag-hk"" data-bs-toggle=""tooltip"" title=""flag flag-hk""></i></li>
											<li><i class=""flag flag-hn"" data-bs-toggle=""tooltip"" title=""flag flag-hn""></i></li>
											<li><i class=""flag flag-hr"" data-bs-toggle=""tooltip"" title=""flag flag-hr""></i></li>
											<li><i class=""flag flag-ht"" data-bs-toggle=""tooltip"" title=""flag flag-ht""></i></li>
											<li><i class=""flag flag-hu"" data-bs-toggle=""tooltip"" title=""flag flag-hu""></i></li>
											<li><i class=""flag flag-id"" data-bs-toggle=""tooltip"" title=""flag flag-id""></i></li>
											<li><i class=""flag flag-ie"" data-bs-toggle=""tooltip"" title=""flag flag-ie""></i></li>
											<li><i class=""flag flag-il"" data-bs-toggle=""tooltip"" title=""flag flag-il""></i></li>
											<li><i class=""flag flag-im"" data-bs-toggle=""tooltip"" title=""flag flag-im""></i></li>
											<li><i class=""flag flag-in"" data-bs-toggle=""toolti");
                WriteLiteral(@"p"" title=""flag flag-in""></i></li>
											<li><i class=""flag flag-io"" data-bs-toggle=""tooltip"" title=""flag flag-io""></i></li>
											<li><i class=""flag flag-iq"" data-bs-toggle=""tooltip"" title=""flag flag-iq""></i></li>
											<li><i class=""flag flag-ir"" data-bs-toggle=""tooltip"" title=""flag flag-ir""></i></li>
											<li><i class=""flag flag-is"" data-bs-toggle=""tooltip"" title=""flag flag-is""></i></li>
											<li><i class=""flag flag-it"" data-bs-toggle=""tooltip"" title=""flag flag-it""></i></li>
											<li><i class=""flag flag-je"" data-bs-toggle=""tooltip"" title=""flag flag-je""></i></li>
											<li><i class=""flag flag-jm"" data-bs-toggle=""tooltip"" title=""flag flag-jm""></i></li>
											<li><i class=""flag flag-jo"" data-bs-toggle=""tooltip"" title=""flag flag-jo""></i></li>
											<li><i class=""flag flag-jp"" data-bs-toggle=""tooltip"" title=""flag flag-jp""></i></li>
											<li><i class=""flag flag-ke"" data-bs-toggle=""tooltip"" title=""flag flag-ke""></i></li>
											<li><i class=""flag");
                WriteLiteral(@" flag-kg"" data-bs-toggle=""tooltip"" title=""flag flag-kg""></i></li>
											<li><i class=""flag flag-kh"" data-bs-toggle=""tooltip"" title=""flag flag-kh""></i></li>
											<li><i class=""flag flag-ki"" data-bs-toggle=""tooltip"" title=""flag flag-ki""></i></li>
											<li><i class=""flag flag-km"" data-bs-toggle=""tooltip"" title=""flag flag-km""></i></li>
											<li><i class=""flag flag-kn"" data-bs-toggle=""tooltip"" title=""flag flag-kn""></i></li>
											<li><i class=""flag flag-kp"" data-bs-toggle=""tooltip"" title=""flag flag-kp""></i></li>
											<li><i class=""flag flag-kr"" data-bs-toggle=""tooltip"" title=""flag flag-kr""></i></li>
											<li><i class=""flag flag-kw"" data-bs-toggle=""tooltip"" title=""flag flag-kw""></i></li>
											<li><i class=""flag flag-ky"" data-bs-toggle=""tooltip"" title=""flag flag-ky""></i></li>
											<li><i class=""flag flag-kz"" data-bs-toggle=""tooltip"" title=""flag flag-kz""></i></li>
											<li><i class=""flag flag-la"" data-bs-toggle=""tooltip"" title=""flag flag-la""></i></li");
                WriteLiteral(@">
											<li><i class=""flag flag-lb"" data-bs-toggle=""tooltip"" title=""flag flag-lb""></i></li>
											<li><i class=""flag flag-lc"" data-bs-toggle=""tooltip"" title=""flag flag-lc""></i></li>
											<li><i class=""flag flag-li"" data-bs-toggle=""tooltip"" title=""flag flag-li""></i></li>
											<li><i class=""flag flag-lk"" data-bs-toggle=""tooltip"" title=""flag flag-lk""></i></li>
											<li><i class=""flag flag-lr"" data-bs-toggle=""tooltip"" title=""flag flag-lr""></i></li>
											<li><i class=""flag flag-ls"" data-bs-toggle=""tooltip"" title=""flag flag-ls""></i></li>
											<li><i class=""flag flag-lt"" data-bs-toggle=""tooltip"" title=""flag flag-lt""></i></li>
											<li><i class=""flag flag-lu"" data-bs-toggle=""tooltip"" title=""flag flag-lu""></i></li>
											<li><i class=""flag flag-lv"" data-bs-toggle=""tooltip"" title=""flag flag-lv""></i></li>
											<li><i class=""flag flag-ly"" data-bs-toggle=""tooltip"" title=""flag flag-ly""></i></li>
											<li><i class=""flag flag-ma"" data-bs-toggle=""toolti");
                WriteLiteral(@"p"" title=""flag flag-ma""></i></li>
											<li><i class=""flag flag-mc"" data-bs-toggle=""tooltip"" title=""flag flag-mc""></i></li>
											<li><i class=""flag flag-md"" data-bs-toggle=""tooltip"" title=""flag flag-md""></i></li>
											<li><i class=""flag flag-me"" data-bs-toggle=""tooltip"" title=""flag flag-me""></i></li>
											<li><i class=""flag flag-mg"" data-bs-toggle=""tooltip"" title=""flag flag-mg""></i></li>
											<li><i class=""flag flag-mh"" data-bs-toggle=""tooltip"" title=""flag flag-mh""></i></li>
											<li><i class=""flag flag-mk"" data-bs-toggle=""tooltip"" title=""flag flag-mk""></i></li>
											<li><i class=""flag flag-ml"" data-bs-toggle=""tooltip"" title=""flag flag-ml""></i></li>
											<li><i class=""flag flag-mm"" data-bs-toggle=""tooltip"" title=""flag flag-mm""></i></li>
											<li><i class=""flag flag-mn"" data-bs-toggle=""tooltip"" title=""flag flag-mn""></i></li>
											<li><i class=""flag flag-mo"" data-bs-toggle=""tooltip"" title=""flag flag-mo""></i></li>
											<li><i class=""flag");
                WriteLiteral(@" flag-mp"" data-bs-toggle=""tooltip"" title=""flag flag-mp""></i></li>
											<li><i class=""flag flag-mq"" data-bs-toggle=""tooltip"" title=""flag flag-mq""></i></li>
											<li><i class=""flag flag-mr"" data-bs-toggle=""tooltip"" title=""flag flag-mr""></i></li>
											<li><i class=""flag flag-ms"" data-bs-toggle=""tooltip"" title=""flag flag-ms""></i></li>
											<li><i class=""flag flag-mt"" data-bs-toggle=""tooltip"" title=""flag flag-mt""></i></li>
											<li><i class=""flag flag-mu"" data-bs-toggle=""tooltip"" title=""flag flag-mu""></i></li>
											<li><i class=""flag flag-mv"" data-bs-toggle=""tooltip"" title=""flag flag-mv""></i></li>
											<li><i class=""flag flag-mw"" data-bs-toggle=""tooltip"" title=""flag flag-mw""></i></li>
											<li><i class=""flag flag-mx"" data-bs-toggle=""tooltip"" title=""flag flag-mx""></i></li>
											<li><i class=""flag flag-my"" data-bs-toggle=""tooltip"" title=""flag flag-my""></i></li>
											<li><i class=""flag flag-mz"" data-bs-toggle=""tooltip"" title=""flag flag-mz""></i></li");
                WriteLiteral(@">
											<li><i class=""flag flag-na"" data-bs-toggle=""tooltip"" title=""flag flag-na""></i></li>
											<li><i class=""flag flag-nc"" data-bs-toggle=""tooltip"" title=""flag flag-nc""></i></li>
											<li><i class=""flag flag-ne"" data-bs-toggle=""tooltip"" title=""flag flag-ne""></i></li>
											<li><i class=""flag flag-nf"" data-bs-toggle=""tooltip"" title=""flag flag-nf""></i></li>
											<li><i class=""flag flag-ng"" data-bs-toggle=""tooltip"" title=""flag flag-ng""></i></li>
											<li><i class=""flag flag-ni"" data-bs-toggle=""tooltip"" title=""flag flag-ni""></i></li>
											<li><i class=""flag flag-nl"" data-bs-toggle=""tooltip"" title=""flag flag-nl""></i></li>
											<li><i class=""flag flag-no"" data-bs-toggle=""tooltip"" title=""flag flag-no""></i></li>
											<li><i class=""flag flag-np"" data-bs-toggle=""tooltip"" title=""flag flag-np""></i></li>
											<li><i class=""flag flag-nr"" data-bs-toggle=""tooltip"" title=""flag flag-nr""></i></li>
											<li><i class=""flag flag-nu"" data-bs-toggle=""toolti");
                WriteLiteral(@"p"" title=""flag flag-nu""></i></li>
											<li><i class=""flag flag-nz"" data-bs-toggle=""tooltip"" title=""flag flag-nz""></i></li>
											<li><i class=""flag flag-om"" data-bs-toggle=""tooltip"" title=""flag flag-om""></i></li>
											<li><i class=""flag flag-pa"" data-bs-toggle=""tooltip"" title=""flag flag-pa""></i></li>
											<li><i class=""flag flag-pe"" data-bs-toggle=""tooltip"" title=""flag flag-pe""></i></li>
											<li><i class=""flag flag-pf"" data-bs-toggle=""tooltip"" title=""flag flag-pf""></i></li>
											<li><i class=""flag flag-pg"" data-bs-toggle=""tooltip"" title=""flag flag-pg""></i></li>
											<li><i class=""flag flag-ph"" data-bs-toggle=""tooltip"" title=""flag flag-ph""></i></li>
											<li><i class=""flag flag-pk"" data-bs-toggle=""tooltip"" title=""flag flag-pk""></i></li>
											<li><i class=""flag flag-pl"" data-bs-toggle=""tooltip"" title=""flag flag-pl""></i></li>
											<li><i class=""flag flag-pm"" data-bs-toggle=""tooltip"" title=""flag flag-pm""></i></li>
											<li><i class=""flag");
                WriteLiteral(@" flag-pn"" data-bs-toggle=""tooltip"" title=""flag flag-pn""></i></li>
											<li><i class=""flag flag-pr"" data-bs-toggle=""tooltip"" title=""flag flag-pr""></i></li>
											<li><i class=""flag flag-ps"" data-bs-toggle=""tooltip"" title=""flag flag-ps""></i></li>
											<li><i class=""flag flag-pt"" data-bs-toggle=""tooltip"" title=""flag flag-pt""></i></li>
											<li><i class=""flag flag-pw"" data-bs-toggle=""tooltip"" title=""flag flag-pw""></i></li>
											<li><i class=""flag flag-py"" data-bs-toggle=""tooltip"" title=""flag flag-py""></i></li>
											<li><i class=""flag flag-qa"" data-bs-toggle=""tooltip"" title=""flag flag-qa""></i></li>
											<li><i class=""flag flag-re"" data-bs-toggle=""tooltip"" title=""flag flag-re""></i></li>
											<li><i class=""flag flag-ro"" data-bs-toggle=""tooltip"" title=""flag flag-ro""></i></li>
											<li><i class=""flag flag-rs"" data-bs-toggle=""tooltip"" title=""flag flag-rs""></i></li>
											<li><i class=""flag flag-ru"" data-bs-toggle=""tooltip"" title=""flag flag-ru""></i></li");
                WriteLiteral(@">
											<li><i class=""flag flag-rw"" data-bs-toggle=""tooltip"" title=""flag flag-rw""></i></li>
											<li><i class=""flag flag-sa"" data-bs-toggle=""tooltip"" title=""flag flag-sa""></i></li>
											<li><i class=""flag flag-sb"" data-bs-toggle=""tooltip"" title=""flag flag-sb""></i></li>
											<li><i class=""flag flag-sc"" data-bs-toggle=""tooltip"" title=""flag flag-sc""></i></li>
											<li><i class=""flag flag-sd"" data-bs-toggle=""tooltip"" title=""flag flag-sd""></i></li>
											<li><i class=""flag flag-se"" data-bs-toggle=""tooltip"" title=""flag flag-se""></i></li>
											<li><i class=""flag flag-sg"" data-bs-toggle=""tooltip"" title=""flag flag-sg""></i></li>
											<li><i class=""flag flag-sh"" data-bs-toggle=""tooltip"" title=""flag flag-sh""></i></li>
											<li><i class=""flag flag-si"" data-bs-toggle=""tooltip"" title=""flag flag-si""></i></li>
											<li><i class=""flag flag-sk"" data-bs-toggle=""tooltip"" title=""flag flag-sk""></i></li>
											<li><i class=""flag flag-sl"" data-bs-toggle=""toolti");
                WriteLiteral(@"p"" title=""flag flag-sl""></i></li>
											<li><i class=""flag flag-sm"" data-bs-toggle=""tooltip"" title=""flag flag-sm""></i></li>
											<li><i class=""flag flag-sn"" data-bs-toggle=""tooltip"" title=""flag flag-sn""></i></li>
											<li><i class=""flag flag-so"" data-bs-toggle=""tooltip"" title=""flag flag-so""></i></li>
											<li><i class=""flag flag-sr"" data-bs-toggle=""tooltip"" title=""flag flag-sr""></i></li>
											<li><i class=""flag flag-ss"" data-bs-toggle=""tooltip"" title=""flag flag-ss""></i></li>
											<li><i class=""flag flag-st"" data-bs-toggle=""tooltip"" title=""flag flag-st""></i></li>
											<li><i class=""flag flag-sv"" data-bs-toggle=""tooltip"" title=""flag flag-sv""></i></li>
											<li><i class=""flag flag-sx"" data-bs-toggle=""tooltip"" title=""flag flag-sx""></i></li>
											<li><i class=""flag flag-sy"" data-bs-toggle=""tooltip"" title=""flag flag-sy""></i></li>
											<li><i class=""flag flag-sz"" data-bs-toggle=""tooltip"" title=""flag flag-sz""></i></li>
											<li><i class=""flag");
                WriteLiteral(@" flag-tc"" data-bs-toggle=""tooltip"" title=""flag flag-tc""></i></li>
											<li><i class=""flag flag-td"" data-bs-toggle=""tooltip"" title=""flag flag-td""></i></li>
											<li><i class=""flag flag-tf"" data-bs-toggle=""tooltip"" title=""flag flag-tf""></i></li>
											<li><i class=""flag flag-tg"" data-bs-toggle=""tooltip"" title=""flag flag-tg""></i></li>
											<li><i class=""flag flag-th"" data-bs-toggle=""tooltip"" title=""flag flag-th""></i></li>
											<li><i class=""flag flag-tj"" data-bs-toggle=""tooltip"" title=""flag flag-tj""></i></li>
											<li><i class=""flag flag-tk"" data-bs-toggle=""tooltip"" title=""flag flag-tk""></i></li>
											<li><i class=""flag flag-tl"" data-bs-toggle=""tooltip"" title=""flag flag-tl""></i></li>
											<li><i class=""flag flag-tm"" data-bs-toggle=""tooltip"" title=""flag flag-tm""></i></li>
											<li><i class=""flag flag-tn"" data-bs-toggle=""tooltip"" title=""flag flag-tn""></i></li>
											<li><i class=""flag flag-to"" data-bs-toggle=""tooltip"" title=""flag flag-to""></i></li");
                WriteLiteral(@">
											<li><i class=""flag flag-tr"" data-bs-toggle=""tooltip"" title=""flag flag-tr""></i></li>
											<li><i class=""flag flag-tt"" data-bs-toggle=""tooltip"" title=""flag flag-tt""></i></li>
											<li><i class=""flag flag-tv"" data-bs-toggle=""tooltip"" title=""flag flag-tv""></i></li>
											<li><i class=""flag flag-tw"" data-bs-toggle=""tooltip"" title=""flag flag-tw""></i></li>
											<li><i class=""flag flag-tz"" data-bs-toggle=""tooltip"" title=""flag flag-tz""></i></li>
											<li><i class=""flag flag-ua"" data-bs-toggle=""tooltip"" title=""flag flag-ua""></i></li>
											<li><i class=""flag flag-ug"" data-bs-toggle=""tooltip"" title=""flag flag-ug""></i></li>
											<li><i class=""flag flag-um"" data-bs-toggle=""tooltip"" title=""flag flag-um""></i></li>
											<li><i class=""flag flag-us"" data-bs-toggle=""tooltip"" title=""flag flag-us""></i></li>
											<li><i class=""flag flag-uy"" data-bs-toggle=""tooltip"" title=""flag flag-uy""></i></li>
											<li><i class=""flag flag-uz"" data-bs-toggle=""toolti");
                WriteLiteral(@"p"" title=""flag flag-uz""></i></li>
											<li><i class=""flag flag-va"" data-bs-toggle=""tooltip"" title=""flag flag-va""></i></li>
											<li><i class=""flag flag-vc"" data-bs-toggle=""tooltip"" title=""flag flag-vc""></i></li>
											<li><i class=""flag flag-ve"" data-bs-toggle=""tooltip"" title=""flag flag-ve""></i></li>
											<li><i class=""flag flag-vg"" data-bs-toggle=""tooltip"" title=""flag flag-vg""></i></li>
											<li><i class=""flag flag-vi"" data-bs-toggle=""tooltip"" title=""flag flag-vi""></i></li>
											<li><i class=""flag flag-vn"" data-bs-toggle=""tooltip"" title=""flag flag-vn""></i></li>
											<li><i class=""flag flag-vu"" data-bs-toggle=""tooltip"" title=""flag flag-vu""></i></li>
											<li><i class=""flag flag-wf"" data-bs-toggle=""tooltip"" title=""flag flag-wf""></i></li>
											<li><i class=""flag flag-ws"" data-bs-toggle=""tooltip"" title=""flag flag-ws""></i></li>
											<li><i class=""flag flag-ye"" data-bs-toggle=""tooltip"" title=""flag flag-ye""></i></li>
											<li><i class=""flag");
                WriteLiteral(@" flag-yt"" data-bs-toggle=""tooltip"" title=""flag flag-yt""></i></li>
											<li><i class=""flag flag-za"" data-bs-toggle=""tooltip"" title=""flag flag-za""></i></li>
											<li><i class=""flag flag-zm"" data-bs-toggle=""tooltip"" title=""flag flag-zm""></i></li>
											<li><i class=""flag flag-zw"" data-bs-toggle=""tooltip"" title=""flag flag-zw""></i></li>
										</ul>
									</div>
								</div>
							</div>
						</div>
						<!-- /Chart -->
						
					</div>
				
				</div>				
            </div>
        </div>
        <!-- /Main Wrapper -->
        
        <!-- jQuery -->
        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6f1481eeff3f948f9188cd97c46cab9e295d88f335194", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n        <!-- Feather Icon JS -->\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6f1481eeff3f948f9188cd97c46cab9e295d88f336338", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n        <!-- Slimscroll JS -->\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6f1481eeff3f948f9188cd97c46cab9e295d88f337480", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n        <!-- Bootstrap Core JS -->\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6f1481eeff3f948f9188cd97c46cab9e295d88f338626", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n        <!-- Chart JS -->\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6f1481eeff3f948f9188cd97c46cab9e295d88f339763", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6f1481eeff3f948f9188cd97c46cab9e295d88f340867", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n        \r\n        <!-- Custom JS -->\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6f1481eeff3f948f9188cd97c46cab9e295d88f342013", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n        \r\n    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
